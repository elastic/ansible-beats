#Create KeyStore
#- name: Check that {{beat}} Server keystore exists
#  stat:
#    path: {{beats_data_dir}}/{{beat}}.keystore"
#  register: keystore_exists
#  become: true
#
#- name: Create {{beat}} keystore
#  become: true
#  shell: " {{beats_home_dir}}/bin/{{beat}} keystore create {{beats_conf_dir}}/{{beat}}.yml --path.data {{beats_data_dir}}"
#  when:  not keystore_exists.stat.exists
#  ignore_errors: true

- name: Add Elasticsearch Output Password to Keystore
  become: true
  shell: "echo {{ es_output_pass }}| {{beats_home_dir}}/bin/{{beat}} keystore add ES_OUTPUT_PASS --stdin --force -c {{beats_conf_dir}}/{{beat}}.yml --path.data {{beats_data_dir}}"
  when: es_output_pass and enable_keystore

- name: Add Elasticsearch Remote Monitoring User Pass to Keystore
  become: true
  shell: "echo {{ remote_monitoring_pass }}| {{ beats_home_dir }}/bin/{{beat}} keystore add REMOTE_MONITORING_PASS --stdin --force -c {{beats_conf_dir}}/{{beat}}.yml  --path.data {{beats_data_dir}}"
  when: remote_monitoring_pass and enable_keystore

